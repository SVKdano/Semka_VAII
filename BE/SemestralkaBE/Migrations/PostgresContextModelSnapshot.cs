// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SemestralkaBE.Models;

#nullable disable

namespace SemestralkaBE.Migrations
{
    [DbContext(typeof(PostgresContext))]
    partial class PostgresContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SemestralkaBE.Models.Double", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EncounterId")
                        .HasColumnType("integer")
                        .HasColumnName("encounter_id");

                    b.Property<int>("GuestPlayerFirst")
                        .HasColumnType("integer")
                        .HasColumnName("guest_player_first");

                    b.Property<int>("GuestPlayerSecond")
                        .HasColumnType("integer")
                        .HasColumnName("guest_player_second");

                    b.Property<int>("GuestSetWin")
                        .HasColumnType("integer")
                        .HasColumnName("guest_set_win");

                    b.Property<int>("HostPlayerFirst")
                        .HasColumnType("integer")
                        .HasColumnName("host_player_first");

                    b.Property<int>("HostPlayerSecond")
                        .HasColumnType("integer")
                        .HasColumnName("host_player_second");

                    b.Property<int>("HostSetWin")
                        .HasColumnType("integer")
                        .HasColumnName("host_set_win");

                    b.HasKey("Id")
                        .HasName("doubles_pk");

                    b.HasIndex("EncounterId");

                    b.HasIndex("GuestPlayerFirst");

                    b.HasIndex("GuestPlayerSecond");

                    b.HasIndex("HostPlayerFirst");

                    b.HasIndex("HostPlayerSecond");

                    b.ToTable("doubles", "ostzpb");
                });

            modelBuilder.Entity("SemestralkaBE.Models.Encounter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int?>("Guest")
                        .HasColumnType("integer")
                        .HasColumnName("guest");

                    b.Property<int?>("GuestsWins")
                        .HasColumnType("integer")
                        .HasColumnName("guests_wins");

                    b.Property<int>("Host")
                        .HasColumnType("integer")
                        .HasColumnName("host");

                    b.Property<int?>("HostsWins")
                        .HasColumnType("integer")
                        .HasColumnName("hosts_wins");

                    b.Property<int>("Place")
                        .HasColumnType("integer")
                        .HasColumnName("place");

                    b.Property<int>("Round")
                        .HasColumnType("integer")
                        .HasColumnName("round");

                    b.Property<TimeOnly>("Time")
                        .HasColumnType("time without time zone")
                        .HasColumnName("time");

                    b.HasKey("Id")
                        .HasName("encounter_pk");

                    b.HasIndex("Guest");

                    b.HasIndex("Host");

                    b.HasIndex("Place");

                    b.ToTable("encounter", "ostzpb");
                });

            modelBuilder.Entity("SemestralkaBE.Models.League", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.HasKey("Id")
                        .HasName("league_pk");

                    b.ToTable("league", "ostzpb");
                });

            modelBuilder.Entity("SemestralkaBE.Models.Place", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasDefaultValueSql("nextval('ostzpb.place_place_id_seq'::regclass)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("address");

                    b.Property<int>("TeamId")
                        .HasColumnType("integer")
                        .HasColumnName("team_id");

                    b.HasKey("Id")
                        .HasName("place_pk");

                    b.HasIndex("TeamId");

                    b.ToTable("place", "ostzpb");
                });

            modelBuilder.Entity("SemestralkaBE.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("surname");

                    b.Property<int>("TeamId")
                        .HasColumnType("integer")
                        .HasColumnName("team_id");

                    b.HasKey("Id")
                        .HasName("player_pk");

                    b.HasIndex("TeamId");

                    b.ToTable("player", "ostzpb");
                });

            modelBuilder.Entity("SemestralkaBE.Models.Single", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EncounterId")
                        .HasColumnType("integer")
                        .HasColumnName("encounter_id");

                    b.Property<int>("GuestPlayerId")
                        .HasColumnType("integer")
                        .HasColumnName("guest_player_id");

                    b.Property<int>("GuestSetWin")
                        .HasColumnType("integer")
                        .HasColumnName("guest_set_win");

                    b.Property<int?>("HostPlayerId")
                        .HasColumnType("integer")
                        .HasColumnName("host_player_id");

                    b.Property<int>("HostSetWin")
                        .HasColumnType("integer")
                        .HasColumnName("host_set_win");

                    b.HasKey("Id")
                        .HasName("singles_pk");

                    b.HasIndex("EncounterId");

                    b.HasIndex("GuestPlayerId");

                    b.HasIndex("HostPlayerId");

                    b.ToTable("singles", "ostzpb");
                });

            modelBuilder.Entity("SemestralkaBE.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("League")
                        .HasColumnType("integer")
                        .HasColumnName("league");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("team_pk");

                    b.HasIndex("League");

                    b.ToTable("team", "ostzpb");
                });

            modelBuilder.Entity("SemestralkaBE.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("VerificationToke")
                        .HasColumnType("text");

                    b.Property<DateTime>("VerifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SemestralkaBE.Models.Double", b =>
                {
                    b.HasOne("SemestralkaBE.Models.Encounter", "Encounter")
                        .WithMany("Doubles")
                        .HasForeignKey("EncounterId")
                        .IsRequired()
                        .HasConstraintName("doubles_fk");

                    b.HasOne("SemestralkaBE.Models.Player", "GuestPlayerFirstNavigation")
                        .WithMany("DoubleGuestPlayerFirstNavigations")
                        .HasForeignKey("GuestPlayerFirst")
                        .IsRequired()
                        .HasConstraintName("doubles_fk_3");

                    b.HasOne("SemestralkaBE.Models.Player", "GuestPlayerSecondNavigation")
                        .WithMany("DoubleGuestPlayerSecondNavigations")
                        .HasForeignKey("GuestPlayerSecond")
                        .IsRequired()
                        .HasConstraintName("doubles_fk_4");

                    b.HasOne("SemestralkaBE.Models.Player", "HostPlayerFirstNavigation")
                        .WithMany("DoubleHostPlayerFirstNavigations")
                        .HasForeignKey("HostPlayerFirst")
                        .IsRequired()
                        .HasConstraintName("doubles_fk_1");

                    b.HasOne("SemestralkaBE.Models.Player", "HostPlayerSecondNavigation")
                        .WithMany("DoubleHostPlayerSecondNavigations")
                        .HasForeignKey("HostPlayerSecond")
                        .IsRequired()
                        .HasConstraintName("doubles_fk_2");

                    b.Navigation("Encounter");

                    b.Navigation("GuestPlayerFirstNavigation");

                    b.Navigation("GuestPlayerSecondNavigation");

                    b.Navigation("HostPlayerFirstNavigation");

                    b.Navigation("HostPlayerSecondNavigation");
                });

            modelBuilder.Entity("SemestralkaBE.Models.Encounter", b =>
                {
                    b.HasOne("SemestralkaBE.Models.Team", "GuestNavigation")
                        .WithMany("EncounterGuestNavigations")
                        .HasForeignKey("Guest")
                        .HasConstraintName("encounter_fk_2");

                    b.HasOne("SemestralkaBE.Models.Team", "HostNavigation")
                        .WithMany("EncounterHostNavigations")
                        .HasForeignKey("Host")
                        .IsRequired()
                        .HasConstraintName("encounter_fk_1");

                    b.HasOne("SemestralkaBE.Models.Place", "PlaceNavigation")
                        .WithMany("Encounters")
                        .HasForeignKey("Place")
                        .IsRequired()
                        .HasConstraintName("encounter_fk");

                    b.Navigation("GuestNavigation");

                    b.Navigation("HostNavigation");

                    b.Navigation("PlaceNavigation");
                });

            modelBuilder.Entity("SemestralkaBE.Models.Place", b =>
                {
                    b.HasOne("SemestralkaBE.Models.Team", "Team")
                        .WithMany("Places")
                        .HasForeignKey("TeamId")
                        .IsRequired()
                        .HasConstraintName("place_fk");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("SemestralkaBE.Models.Player", b =>
                {
                    b.HasOne("SemestralkaBE.Models.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .IsRequired()
                        .HasConstraintName("newtable_fk");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("SemestralkaBE.Models.Single", b =>
                {
                    b.HasOne("SemestralkaBE.Models.Encounter", "Encounter")
                        .WithMany("Singles")
                        .HasForeignKey("EncounterId")
                        .IsRequired()
                        .HasConstraintName("newtable_fk");

                    b.HasOne("SemestralkaBE.Models.Player", "GuestPlayer")
                        .WithMany("SingleGuestPlayers")
                        .HasForeignKey("GuestPlayerId")
                        .IsRequired()
                        .HasConstraintName("singles_fk_1");

                    b.HasOne("SemestralkaBE.Models.Player", "HostPlayer")
                        .WithMany("SingleHostPlayers")
                        .HasForeignKey("HostPlayerId")
                        .HasConstraintName("singles_fk");

                    b.Navigation("Encounter");

                    b.Navigation("GuestPlayer");

                    b.Navigation("HostPlayer");
                });

            modelBuilder.Entity("SemestralkaBE.Models.Team", b =>
                {
                    b.HasOne("SemestralkaBE.Models.League", "LeagueNavigation")
                        .WithMany("Teams")
                        .HasForeignKey("League")
                        .IsRequired()
                        .HasConstraintName("team_fk");

                    b.Navigation("LeagueNavigation");
                });

            modelBuilder.Entity("SemestralkaBE.Models.Encounter", b =>
                {
                    b.Navigation("Doubles");

                    b.Navigation("Singles");
                });

            modelBuilder.Entity("SemestralkaBE.Models.League", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("SemestralkaBE.Models.Place", b =>
                {
                    b.Navigation("Encounters");
                });

            modelBuilder.Entity("SemestralkaBE.Models.Player", b =>
                {
                    b.Navigation("DoubleGuestPlayerFirstNavigations");

                    b.Navigation("DoubleGuestPlayerSecondNavigations");

                    b.Navigation("DoubleHostPlayerFirstNavigations");

                    b.Navigation("DoubleHostPlayerSecondNavigations");

                    b.Navigation("SingleGuestPlayers");

                    b.Navigation("SingleHostPlayers");
                });

            modelBuilder.Entity("SemestralkaBE.Models.Team", b =>
                {
                    b.Navigation("EncounterGuestNavigations");

                    b.Navigation("EncounterHostNavigations");

                    b.Navigation("Places");

                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
